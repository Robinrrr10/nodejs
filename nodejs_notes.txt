NodeJs:
------

Node js is platform to run nodejs application.

It is in javascript

It is used to read, write and delete files

It can easily connect to db

----


Installation:
------------
1. Download node js from official website and double click and install
2. Use below command to check whether node js is installed or not
node -v                 //This will show version of nodejs

To run application use below command
node filename
Eg: node app
or
node app.js

------

v8 engine:
---------

nodejs is internally written in c++
heart of nodejs is v8 engine
Nodejs will convert javascript code into machine code using v8 engine


---

global object:
-----------
console.log("")   //console is one of global object


setTimeout(functionName, milliSec) //This will call given function after given millisec
Eg:
setTimeout(myfunction, 4000)

setInterval(functionName, milliSec) //This will call given function in every interval of time
clearInterval(varName) //This is to clear the set Interval

Eg:
let time = 0
let timer = setInterval(function(){ //this is used to call function in every given interval
  time += 4
  console.log(time, " sec passed")
  if(time > 20) {
    clearInterval(timer)
  }
}, 

console.log(__dirname) //to show current directory
console.log(__filename) //To show current filename

---

function expression:
-------------------

taking function as a object/variable is called as function expression

//function expression
var hello = function(){
  console.log("helloooo");
}

hello();




function myfunctionDa(funcName){
  funcName();
}
var pen = function(){
  console.log("pennn");
}


---

module and require():
-------------------
require('givePathOfImportingFile')       //This is used to import other js files/function
module.exports = giveFunctionOrVariableName   //Here we will give what function can be exported and used outside


Eg:
in file1.js:
var count = function(arr){
  return 'length is: ' + arr.length;
};

module.exports = count;      //This is used export count  function outside this file as well


in file2.js
var counter = require('./file1'); //file name. no need of .js //This is used to import

console.log(counter([34, 23, 12, 44]))


---


module pattern (Exporting multiple functions or variables):
--------------

module.exports.name1 = variableOrFunctionName1   //set each properties for function or variable to export
module.exports.name2 = variableOrFunctionName2
module.exports.name3 = variableOrFunctionName3

or

module.exports = {       //set each properties for function or variable to export
name1: variableOrFunctionName1,
name2: variableOrFunctionName2,
name3: variableOrFunctionName3
}



Eg:

var count = function(arr){
  return 'length is' + arr.length;
}

var add = function(a, b) {
  return `addition result is ${a+b}`
}

var name = "dinesh";

module.exports.count = count;
module.exports.addition = add;
module.exports.user = name;

or

module.exports = {
  count: count,
  addition: add,
  customer: name
}

---

Event module:
-----------


EventEmitter:



var events = require('events'); //event is inbuild module in NodeJs

var myEmitter = new events.EventEmitter(); //EventEmitter is used to create new event

myEmitter.on('perform', function(message){ //here 'perform' action is created with one function takes one param //this is created using on
  console.log(message)
})

myEmitter.emit('perform', 'do something here') //Here perform action is called with another param which will be used in previously created function


-------

inheriting EventEmitter:

var events = require('events');
var util = require('util'); //util has different utils as like inherits etc

var Person = function(name){
  this.name = name;
}

util.inherits(Person, events.EventEmitter) //inherit is used to inherit. Here i inherited EventEmitter to use in Person

var ram = new Person('Ram')
var raja = new Person('Raja')
var babu = new Person('babu')

var allPeople = [ram, raja, babu]

allPeople.forEach(function(eachPer){
  eachPer.on('speak', function(msg){ //as i already inherited EventEmitter, i can use on function here// Here i created speak action with an function which takes message
    console.log(eachPer.name + " said: " + msg);
  })
});

ram.emit('speak', 'hello') //as i used for all object in array, speak will work for all obj in array
raja.emit('speak', 'hi man')
babu.emit('speak', 'my message da')



-----------



---



